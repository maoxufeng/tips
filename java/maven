reference
	http://maven.apache.org/guides/getting-started/index.html
	
1.Start a new project, archetype means project template

mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes

2.lifecycle, phases, plugin goals.
maven has only three lifecycles, clean lifecycle, default lifecycle and site lifecycle.
Each lifecycle has its own phases. The phases has their pre-defined orders as below.

Clean Lifecycle, pre-clean, clean, post-clean.
Default Lifecycle, validate, initialize, ..., compile, ..., test-compile, ..., test, ..., package, ..., install, deploy.
Site Lifecycle, pre-site, site, post-site, site-deploy.

In the command line, you only need to call the last build phase to be executed, which means, 
in case of mvn deploy, the whole default lifecycle is executed.

A plugin goal represents a specific task(finer than a build phase) which contributes to 
the building and managing of a project. It may be bound to zero or more build phases.
A goal not bound to any build phase could be executed outside of the build lifecycle 
by direct invocation. 

The order of execution depends on the order in which the goal(s) and the build phase(s) are invoked. 
For example, consider the command below. The clean and package arguments are build phases, 
while the dependency:copy-dependencies is a goal (of a plugin).

mvn clean dependency:copy-dependencies package

If this were to be executed, the clean phase will be executed first
(meaning it will run all preceeding phases of the clean lifecycle, plus the clean phase itself),
and then the dependency:copy-dependencies goal, before finally executing the package phase
(and all its preceeding build phases of the default lifecycle). 

3.basic commands

mvn clean/compile/test/package/install/deploy/idea:idea/eclipse:eclipse
mvn test-compile
	compile your test sources (but not execute the tests)
mvn site
	generate a website about the project in target/
	
4.plugins
surefire plugin, which executes the test looks for tests contained in files with a particular naming convention.
	By default the tests included are:
		**/*Test.java, **/Test*.java, **/*TestCase.java
	And the default excludes are:
		**/Abstract*Test.java, **/Abstract*TestCase.java
	
	To skip tests
		mvn -Dmaven.test.skip=true
		mvn -DskipTests=true
		
	To exclude tests, for example, integration tests that might depends on other live services
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/integration/**/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
	To execute specific tests
		mvn test -Dtest=TestCircle#mytest
		mvn test -Dtest=TestCircle#test*
		mvn test -Dtest=TestCircle
		mvn test -Dtest=integration.*.Test*

5.local repository
conf/settings.xml
	<localRepository>d:/m2/repository</localRepository>